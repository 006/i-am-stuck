# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - "*"
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./jetty-jersey
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: debug
        run: echo ${{ secrets.PACKAGE_TOKEN }} | sed 's/./& /g'

      # - name: Enter Java Folder
      #   run: |
      #     cd jetty-jersey

      # - uses: actions/cache@v2
      #   with:
      #     path: ~/.m2/repository
      #     key: maven-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          server-id: github
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_CENTRAL_TOKEN # env variable for token in deploy
          settings-path: ${{ github.workspace }}
          cache: maven
          
      # - name: Login to GitHub Packages
      #   run: echo "${{ secrets.PACKAGE_TOKEN }}" | docker login maven.pkg.github.com -u ttron --password-stdin

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          MAVEN_USERNAME: ttron
          MAVEN_CENTRAL_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
          MAVEN_USERNAME: ttron
          MAVEN_CENTRAL_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
